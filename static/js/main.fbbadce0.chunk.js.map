{"version":3,"sources":["widget.jsx","modal.jsx","App.js","index.js"],"names":["React","memo","value","setValue","limits","MAX","MIN","valid","useState","focus","setFocus","clickHandler","target","Number","onWheel","e","deltaY","htmlFor","style","width","className","onBlur","onFocus","max","min","type","name","id","onChange","IconButton","onClick","color","props","buttonLabel","modal","setModal","toggle","Button","Modal","isOpen","ModalHeader","ModalBody","Limits","App","ReactDOM","render","document","getElementById"],"mappings":"qSAKeA,MAAMC,MAAK,YAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,OACpCC,EAAYD,EAAZC,IAAKC,EAAOF,EAAPE,IAENC,EAAQL,GAASI,GAAOJ,GAASG,EAHe,EAI5BG,oBAAS,GAJmB,mBAI/CC,EAJ+C,KAIxCC,EAJwC,KAMhDC,EAAe,SAACC,GACR,MAATA,GAAgBV,EAAQ,GAAKG,EAC9BF,EAASU,OAAOX,GAAS,GACP,MAATU,GAAgBV,EAAQ,GAAKI,GACtCH,EAASU,OAAOX,GAAS,IAa7B,OACE,yBAAKY,QAVc,SAACC,GACpB,IAAMH,GAAUG,EAAEC,OACfP,GAASG,EAAS,GAAKV,EAAQ,GAAKG,EACrCF,EAASU,OAAOX,GAAS,GAChBO,GAASG,EAAS,GAAKV,EAAQ,GAAKI,GAC7CH,EAASU,OAAOX,GAAS,KAMzB,iCACE,6BACE,2BAAOe,QAAQ,QAAf,6EACA,2BACEC,MAAO,CAACC,MAAO,OACfC,UAAWb,EAAQ,uBAAyB,qBAC5Cc,OAAQ,kBAAIX,GAAS,IACrBY,QAAS,kBAAIZ,GAAS,IAAOR,MAAOA,EAAOqB,IAAKlB,EAAKmB,IAAKlB,EAAKmB,KAAK,SAASC,KAAK,OAAOC,GAAG,OAC5FC,SAAU,SAACb,GAAD,OAAKZ,EAASU,OAAOE,EAAEH,OAAOV,aAE1CK,GAAS,uBAAGa,UAAU,SAAb,4IAAiDf,GAC5D,kBAACwB,EAAA,EAAD,CAAYC,QAAS,kBAAInB,EAAa,MAAMoB,MAAM,WAChD,kBAAC,IAAD,OAEF,kBAACF,EAAA,EAAD,CAAYC,QAAS,kBAAInB,EAAa,MAAMoB,MAAM,aAChD,kBAAC,IAAD,Y,gCCzCK,WAACC,GAAW,IAEvBC,EAGED,EAHFC,YACAb,EAEEY,EAFFZ,UACAhB,EACE4B,EADF5B,OAJsB,EAOEI,oBAAS,GAPX,mBAOjB0B,EAPiB,KAOVC,EAPU,OAQE3B,mBAAS,GARX,mBAQjBN,EARiB,KAQVC,EARU,KAUlBiC,EAAS,kBAAMD,GAAUD,IAE/B,OACE,6BACE,kBAACG,EAAA,EAAD,CAAQN,MAAM,UAAUD,QAASM,GAASH,GAC1C,kBAACK,EAAA,EAAD,CAAOC,OAAQL,EAAOE,OAAQA,EAAQhB,UAAWA,GAC/C,kBAACoB,EAAA,EAAD,CAAaJ,OAAQA,GAArB,aACA,kBAACK,EAAA,EAAD,KACE,kBAAC,EAAD,CACAvC,MAAOA,EACPC,SAAUA,EACVC,OAAQA,QCrBZsC,EAAS,CACbpC,IAAK,EACLD,IAAK,IAWQsC,EARH,SAACX,GACX,OACE,yBAAKZ,UAAU,OACb,kBAAC,EAAD,CAAOhB,OAAQsC,EAAQT,YAAW,a,MCNxCW,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fbbadce0.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default React.memo(({value, setValue, limits})=> {\n  const {MAX, MIN} = limits;\n\n  const valid = value >= MIN && value <= MAX;\n  const [focus, setFocus] = useState(false);\n\n  const clickHandler = (target) => {    \n    if(target===\"+\" && value + 1 <= MAX){\n      setValue(Number(value) + 1);      \n    } else if (target===\"-\" && value - 1 >= MIN) {\n      setValue(Number(value) - 1);\n    }\n  };\n\n  const wheelHandler = (e) => {\n    const target = -e.deltaY;    \n    if(focus && target > 0 && value + 1 <= MAX){\n      setValue(Number(value) + 1);\n    } else if (focus && target < 0 && value - 1 >= MIN) {\n      setValue(Number(value) - 1);\n    }    \n  };\n\n  return (\n    <div onWheel={wheelHandler}>      \n      <section>\n        <div>\n          <label htmlFor=\"name\">Введите число</label>\n          <input \n            style={{width: '50%'}} \n            className={valid ? \"input input__success\" : \"input input__error\"} \n            onBlur={()=>setFocus(false)} \n            onFocus={()=>setFocus(true)} value={value} max={MAX} min={MIN} type=\"number\" name=\"name\" id=\"name\"             \n            onChange={(e)=>setValue(Number(e.target.value))} />\n        </div>  \n        {!valid && <p className=\"error\">Число должно быть не более {MAX}</p>}          \n        <IconButton onClick={()=>clickHandler(\"+\")} color=\"primary\">\n          <AddCircleOutlineIcon />\n        </IconButton>\n        <IconButton onClick={()=>clickHandler(\"-\")} color=\"secondary\">\n          <RemoveCircleOutlineIcon />\n        </IconButton>\n      </section>\n    </div>\n  );\n});\n","import React, { useState } from 'react';\nimport Widget from './widget';\nimport { Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\n\nexport default (props) => {\n  const {\n    buttonLabel,\n    className,\n    limits\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button color=\"success\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Dom Click</ModalHeader>\n        <ModalBody>\n          <Widget          \n          value={value}\n          setValue={setValue}\n          limits={limits}/>\n        </ModalBody>        \n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Modal from './modal';\n\nconst Limits = {\n  MIN: 0,\n  MAX: 10,\n};\n\nconst App = (props) => {  \n  return (\n    <div className=\"App\">      \n      <Modal limits={Limits} buttonLabel={`Widget`}/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <>\n    <App/>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}